function binary2ascii(filein, fileout)

    % Read binary file, get F, V, N
    if ~exist(filein,'file')
            error(['File ''%s'' not found. If the file is not on MATLAB''s path' ...
                   ', be sure to specify the full path to the file.'], filein);
    end

    fid = fopen(filein,'r');    
    if ~isempty(ferror(fid))
        error(lasterror); %#ok
    end

    M = fread(fid,inf,'uint8=>uint8');
    fclose(fid);

    F = [];
    V = [];
    N = [];

    if length(M) < 84
        error('MATLAB:stlread:incorrectFormat', ...
            'Incomplete header information in binary STL file.');
    end

    % Bytes 81-84 are an unsigned 32-bit integer specifying the number of faces
    % that follow.
    numFaces = typecast(M(81:84),'uint32');
    %numFaces = double(numFaces);
    if numFaces == 0
        warning('MATLAB:stlread:nodata','No data in STL file.');
        return
    end

    T = M(85:end);
    F = NaN(numFaces,3);
    V = NaN(3*numFaces,3);
    N = NaN(numFaces,3);

    numRead = 0;
    while numRead < numFaces
        % Each facet is 50 bytes
        %  - Three single precision values specifying the face normal vector
        %  - Three single precision values specifying the first vertex (XYZ)
        %  - Three single precision values specifying the second vertex (XYZ)
        %  - Three single precision values specifying the third vertex (XYZ)
        %  - Two unused bytes
        i1    = 50 * numRead + 1;
        i2    = i1 + 50 - 1;
        facet = T(i1:i2)';

        n  = typecast(facet(1:12),'single');
        v1 = typecast(facet(13:24),'single');
        v2 = typecast(facet(25:36),'single');
        v3 = typecast(facet(37:48),'single');

        n = double(n);
        v = double([v1; v2; v3]);

        % Figure out where to fit these new vertices, and the face, in the
        % larger F and V collections.        
        fInd  = numRead + 1;        
        vInd1 = 3 * (fInd - 1) + 1;
        vInd2 = vInd1 + 3 - 1;

        V(vInd1:vInd2,:) = v;
        F(fInd,:)        = vInd1:vInd2;
        N(fInd,:)        = n;

        numRead = numRead + 1;
    end
    
    % Write ASCII STL
    tic;
    br = sprintf('\n');
    count = 0;
    incr = floor(length(N)/10);
    
    fid = fopen(fileout, 'wt');
    fwrite(fid, ['solid ' filein ' generated by binary2ascii v1.0']);
    
    disp(['Total facets: ', num2str(length(N))]);
    for i = 1:length(N)
        fwrite(fid, [br...
            '   facet normal ' num2str(N(i,:)) br...
            '      outer loop']);
        for j = 1:3
            fwrite(fid, [br...
                '         vertex ' num2str(V(i,:))]);
        end
        fwrite(fid, [br...
            '      endloop' br...
            '   endfacet']);
        count = count + 1;
        if mod(count, incr)==0
            fprintf('.');
        end
    end
    fwrite(fid, [br...
        'endsolid']);
    
    fclose(fid);
    disp('File written succesfully!');
    toc;
end